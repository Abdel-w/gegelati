name: CI
on: [push]
jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++, clang++]
    name: Ubuntu-${{ matrix.compiler }}
    env:
      GENERATOR: 'Unix Makefile'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: |
          sudo apt install doxygen
      - name: Build
        run: |
          cd bin
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Debug
          cmake --build . --target GEGELATI
          cmake --build . --target doc
          sudo make install
          cmake --build . --target runTests
      - name: Run Tests
        run: |
          cd bin
          ./bin/runTests
  Windows-MSVC:
    runs-on: windows-latest
    env:
      GENERATOR: 'Visual Studio 16 2019'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        uses: nick-invision/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 1
          retry_on: error
          command: choco install doxygen.install --force
          shell: bash
      - name: Build
        run: |
          cd bin
          cmake ..
          cmake --build . --target GEGELATI --config Debug
          cmake --build . --target doc
          cmake --build . --target INSTALL --config Debug
          if [ ${GITHUB_REF##*/} == "develop" ] || [ ${GITHUB_REF##*/} == "master" ] ; then cmake --build . --target INSTALL --config Release ; fi;
          cmake --build . --target runTests --config Debug
        shell: bash
      - name: Run Tests
        run: |
          cd bin
          ./bin/Debug/runTests.exe
        shell: bash
      - name: Prepare archive
        run: |
         VERSION_NUMBER="$(cat CMakeLists.txt | grep -m 1 "VERSION \([0-9]\+.[0-9]\+.[0-9]\+\)" | sed -E -e 's/ |\)|VERSION//g')"
         # Prepare folder
         mkdir neutral_builds
         cd neutral_builds
         # Prepare archive name
         ARCHIVE_NAME="gegelatilib-${VERSION_NUMBER}.$(git show -s --format="%ci" | cut -d' ' -f 1 | sed 's/-//g')$(git show -s --format="%ci" | cut -d' ' -f 2 | sed 's/://g').zip"
         # Copy windows built and create an archive
         cp -r ../bin/gegelatilib-${VERSION_NUMBER} ./gegelatilib-${VERSION_NUMBER}
         7z a $ARCHIVE_NAME gegelatilib-${VERSION_NUMBER}/*
        shell: bash
        if: endsWith(github.ref, 'develop') || contains(github.ref, '/tags/v')
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: windows-gegelatilib
          path: ./neutral_builds/*.zip
        if: endsWith(github.ref, 'develop') || contains(github.ref, '/tags/v')
  MacOS-clang:
    runs-on: macos-latest
    env:
      GENERATOR: 'Unix Makefile'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: brew install doxygen
      - name: Build
        run: |
          cd bin
          cmake .. -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug
          cmake --build . --target GEGELATI
          cmake --build . --target doc
          sudo make install
          cmake --build . --target runTests
      - name: Run Tests
        run: |
          cd bin
          ./bin/runTests
  Deploy-NeutralBuilds:
    runs-on: ubuntu-latest
    needs: [Ubuntu, MacOS-clang, Windows-MSVC]
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: windows-gegelatilib
          path: ./neutral_builds/
      - name: Prepare neutral build page
        run: python ./scripts/prepare_neutral_build_page.py
      - name: Upload pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          repository-name: gegelati/neutral-builds
          branch: gh-pages
          folder: ./neutral_builds
          token: ${{ secrets.BOT_DEPLOY_TOKEN }}
          single-commit: true
  Deploy-Releases:
    runs-on: ubuntu-latest
    needs: [Ubuntu, MacOS-clang, Windows-MSVC]
    if: contains(github.ref, '/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: windows-gegelatilib
          path: ./neutral_builds/
      - name: Prepare Release Log
        run: python ./scripts/prepare_release_log.py
      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
          token: ${{ secrets.BOT_DEPLOY_TOKEN }}
          files: ./neutral_builds/*.zip
          draft: true
        