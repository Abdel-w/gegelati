#include "OneLeafNoInstruction.h"
#include "OneLeafNoInstruction_program.h"
#include <limits.h>
#include <assert.h>
#include <float.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdint.h>

int bestProgram(double *results, int nb) {
	int bestProgram = 0;
	double bestScore = results[0];
	for (int i = 1; i < nb; i++) {
		double challengerScore = results[i];
		if (challengerScore >= bestScore) {
			bestProgram = i;
			bestScore = challengerScore;
		}
	}
	return bestProgram;
}

enum vertices {A0, T1, };

int inferenceTPG() {
	bool teamsVisited[2] = { false };

	double T1Scores[1];

	enum vertices currentVertex = T1;
	while(1) {
		switch (currentVertex) {
		case A0: {
			return 1;
			break;
		}
		case T1: {
			if (!teamsVisited[currentVertex]) {
				teamsVisited[currentVertex] = true;
				T1Scores[0] = P0();
			}
			int best = bestProgram(T1Scores, 1);
			T1Scores[best] = DBL_MIN;
			const enum vertices next[1] = { A0,  };
			currentVertex = next[best];
			break;
		}
		}
	}
}
